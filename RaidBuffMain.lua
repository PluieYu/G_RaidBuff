---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by yuyou.
--- DateTime: 2024/4/17 19:48
---


RBMain =  {}
local L = AceLibrary("AceLocale-2.2"):new("RaidBuff")

RBDatabase ={
    PRIEST = {
        Icons={"Interface\\Icons\\Spell_Holy_WordFortitude",
               "Interface\\Icons\\Spell_Holy_PrayerOfFortitude",
        },
        Name = L["PRIEST"],
        BuffName = L["耐力"]
    },
    MAGE = {
        Icons={"Interface\\Icons\\Spell_Holy_MagicalSentry",
               "Interface\\Icons\\Spell_Holy_ArcaneIntellect",
        },
        Name = L["MAGE"],
        BuffName = L["智力"]
    },
    DRUID= {
        Icons={"Interface\\Icons\\Spell_Nature_Regeneration",
               "Interface\\Icons\\Spell_Nature_Regeneration",
        },
        Name = L["DRUID"],
        BuffName = L["爪子"]
    }
}


function RBMain:OnInitialize()
    if not self.mf then
        self:SetUpMainFrame()
    end
    if not self.ddf then
        self:SetUpDropDFrame()
    end
    self.raidStat = {}
    --candidate
    self.cdt = {
        PRIEST = {},
        MAGE = {},
        DRUID= {},
    }
    --result
    if not self.rlt then
        self.rlt = {
            PRIEST = RaidBuff.opt.PBuff,
            MAGE = RaidBuff.opt.MBuff,
            DRUID =  RaidBuff.opt.DBuff,
        }
    end
end

function RBMain:OnEnable()
    self:Scan()
    self:Flush()
    if GetNumRaidMembers() > 1 then
        self.mf:Show()
    else
        self.mf:Hide()
    end
end

function RBMain:OnDisable()
end

--界面--
function RBMain:SetUpMainFrame()
    if self.mf then
        return
    end
    local f = CreateFrame("Frame", "RBMainFrame", UIParent)
    f:SetWidth(800)
    f:SetHeight(265)
    f:SetBackdrop({
        bgFile = "Interface\\RaidFrame\\UI-RaidFrame-GroupBg",
        --bgFile = "Interface\\Tooltips\\UI-Tooltip-Background", tile = true, tileSize = 16,
        edgeFile = "Interface\\Tooltips\\UI-Tooltip-Border", edgeSize = 16,
        insets = {left = 5, right = 5, top = 5, bottom = 5},
    })
    f:SetAlpha(0.7)
    f:SetFrameStrata("LOW")
    -- position
    f:ClearAllPoints()
    f:SetPoint("LEFT", UIParent, "LEFT", 0, 0)
    -- drag and drop
    f:EnableMouse(true)
    f:SetClampedToScreen(true) -- can't move it outside of the screen
    f:RegisterForDrag("LeftButton")
    f:SetMovable(true)
    f:SetScript("OnDragStart", function() this:StartMoving() end)
    f:SetScript("OnDragStop", function()
        this:StopMovingOrSizing()
        local point, _, relativePoint, xOfs, yOfs = this:GetPoint()
        RaidBuff.opt.point["MainFrame"] = point
        RaidBuff.opt.relativePoint["MainFrame"] = relativePoint
        RaidBuff.opt.xOfs["MainFrame"] = xOfs
        RaidBuff.opt.yOfs["MainFrame"] = yOfs
    end)

    --创建head
    f.textures = {}
    f.fontStrs = {}
    f.buttons = {}

    local texture = f:CreateTexture(nil, "ARTWORK")
    texture:SetTexture("Interface\\QuestFrame\\UI-HorizontalBreak")
    texture:SetPoint("TOP", f, "TOP", 0, -10)
    f.textures["head"] = texture

    local fontStr= f:CreateFontString(nil, "OVERLAY")
    fontStr:SetFontObject("GameFontNormal")
    fontStr:SetPoint("TOP",f ,"TOP", 0 ,-10)
    fontStr:SetText(RaidBuff.Prefix)
    f.fontStrs["head"] = fontStr

    local texture = f:CreateTexture(nil, "ARTWORK")
    texture:SetTexture("Interface\\TargetingFrame\\UI-TargetingFrame-BarFill")
    texture:SetWidth(f:GetWidth() - 10)
    texture:SetHeight(4)
    texture:SetPoint("BOTTOM", f.textures["head"], "BOTTOM", 0, 0)
    f.textures["headLine"] = texture

    local cb = CreateFrame("Button", "closeButton", f)
    cb:SetPoint("TOPRIGHT", f ,"TOPRIGHT", -5, -7)
    cb:SetWidth(30)
    cb:SetHeight(30)
    cb:SetNormalTexture("Interface\\Buttons\\UI-Panel-MinimizeButton-Up")
    cb:SetPushedTexture("Interface\\Buttons\\UI-Panel-MinimizeButton-Down")
    cb:SetHighlightTexture("Interface\\Buttons\\UI-Panel-MinimizeButton-Highlight")
    cb:EnableMouse(true)
    cb:RegisterForClicks("LeftButtonUp")
    cb:SetScript("OnClick", function() f:Hide()
    end)
    f.buttons["closeButton"] = cb

    --创建title
    local emptyButton = CreateFrame("Button", "emptyButton", f)
    emptyButton:SetPoint("TOPLEFT" , f.textures["headLine"] , "BOTTOMLEFT", 0,  0)
    emptyButton:SetNormalTexture("Interface\\Buttons\\UI-GroupLoot-Dice-Down")
    emptyButton:SetHighlightTexture("Interface\\Buttons\\UI-GroupLoot-Dice-Down")
    emptyButton:SetWidth(40)
    emptyButton:SetHeight(40)
    emptyButton:SetScript("OnClick", function()
        if arg1 == "LeftButton" then
            self:AutoSet()
        elseif arg1 == "RightButton" then
            self:Flush()
        end
    end)
    f.buttons["emptyButton"] = emptyButton
    f.buttons["title"] = {}
    for i = 1, 8 do
        local tB = CreateFrame("Button", "titleButton"..i, f)
        tB:SetPoint("LEFT", i ==1 and f.buttons["emptyButton"] or f.buttons["title"][i -1]  ,"RIGHT",4,0)
        tB:SetWidth(90)
        tB:SetHeight(40)
        local fontStr = tB:CreateFontString(nil, "OVERLAY")
        --fontStr:SetPoint("LEFT", i ==1 and f.buttons["emptyButton"] or f.fontStrs["title"][i -1]  ,"RIGHT",4,0)
        fontStr:SetAllPoints(tB)
        --fontStr:SetWidth(90)
        fontStr:SetFontObject("GameFontNormal")
        fontStr:SetText(L["队伍"]..i)
        tB.text = fontStr
        local texture = tB:CreateTexture(nil, "ARTWORK")
        texture:SetTexture("Interface\\TargetingFrame\\UI-TargetingFrame-BarFill")
        texture:SetWidth(4)
        texture:SetHeight(200)
        texture:SetPoint("TOPRIGHT", fontStr, "TOPLEFT", 0, 0)
        --texture:SetPoint("TOPlEFT", i==1 and f.buttons["emptyButton"] or f.fontStrs["title"][i -1]  , "TOPRIGHT", 0, 0)
        tB.lineTextures = texture
        f.buttons["title"][i] = tB
    end

    local texture = f:CreateTexture(nil, "ARTWORK")
    texture:SetTexture("Interface\\TargetingFrame\\UI-TargetingFrame-BarFill")
    texture:SetWidth(f:GetWidth() - 10)
    texture:SetHeight(4)
    texture:SetPoint("TOPlEFT", f.buttons["emptyButton"] , "BOTTOMLEFT", 4, 0)
    f.textures["titleLine"] = texture

    --创建 buff 以及 队伍按钮 最多四层
    f.buttons["buff"] = {}
    f.textures["buff"] = {}
    local classD
    for class, _ in pairs(RBDatabase) do
        local classL = class
        -- 创建BUFF 框架
        f.buttons["buff"][classL] = {}
        local buffButton = CreateFrame("Button", "buffButton".. classL, f)
        buffButton:SetPoint("TOP" , not classD and f.buttons["emptyButton"] or f.buttons["buff"][classD][9], "BOTTOM", 0,  -4)
        buffButton:SetNormalTexture(RBDatabase[classL]["Icons"][2])
        buffButton:SetHighlightTexture(RBDatabase[classL]["Icons"][2])
        buffButton:SetWidth(40)
        buffButton:SetHeight(40)
        -- 创建方程
        buffButton:RegisterForClicks("LeftButtonUp","RightButtonUp")
        buffButton:SetScript("OnClick", function()
            if arg1 == "LeftButton" then
                --print("LeftButton from buffButton".. classL)
                self:Report(classL)
            elseif arg1 == "RightButton" then
                --print("RightButton from buffButton".. classL)
                self:ResetClass(classL)
                self:Flush()
            end
        end)
        local texture = f:CreateTexture(nil, "ARTWORK")
        texture:SetTexture("Interface\\TargetingFrame\\UI-TargetingFrame-BarFill")
        texture:SetWidth(f:GetWidth() - 10)
        texture:SetHeight(4)
        texture:SetPoint("TOPlEFT", buffButton , "BOTTOMLEFT", 0, 0)
        buffButton.lineTextures = texture
        f.buttons["buff"][classL][9] = buffButton
        for j = 1, 8 do
            -- 创建按钮
            local subIndex = j
            local subButton = CreateFrame("Button", "buff"..classL.."subIndex".. subIndex, f)
            subButton:SetPoint("LEFT" ,j==1 and f.buttons["buff"][classL][9] or f.buttons["buff"][classL][j-1], "RIGHT", 4, 0)
            subButton:SetWidth(90)
            subButton:SetHeight(40)
            -- 添加文字
            local text = subButton:CreateFontString(nil, "OVERLAY")
            text:SetAllPoints(subButton)
            text:SetFontObject("GameFontNormal")
            text:SetText("N/A")
            subButton.text = text
            -- 创建方程
            subButton:RegisterForClicks("LeftButtonUp","RightButtonUp")
            subButton:SetScript("OnClick", function()
                if arg1 == "LeftButton" then
                    --print("LeftButton from buffButton"..classL.." subButton".. subIndex)
                    self:UpdateDropDFrame(classL, self.mf.buttons["buff"][classL][subIndex])
                    --self:UpdateContextMenusFrame(classFile, this)
                elseif arg1 == "RightButton" then
                    --print("RightButton from buffButton"..classL.." subButton".. subIndex)
                    self:UpdateResult(classL, self.mf.buttons["buff"][classL][subIndex].group, nil,true)
                    self:Flush()

                end
            end)
            classD = class
            f.buttons["buff"][classL][subIndex] = subButton
        end
    end
    self.mf = f
end
function RBMain:SetUpDropDFrame()
    local f = CreateFrame("Frame", "RBMainFrame", UIParent)
    f:SetWidth(90)
    f:SetHeight(200)
    f:SetBackdrop({
        bgFile = "Interface\\Tooltips\\UI-Tooltip-Background", tile = true, tileSize = 16,
        edgeFile = "Interface\\Tooltips\\UI-Tooltip-Border", edgeSize = 16,
        insets = {left = 5, right = 5, top = 5, bottom = 5},
    })
    -- position
    f:ClearAllPoints()
    f:SetPoint("CENTER", UIParent, "CENTER", 0, 0)
    --buttons
    f.buttons = {}
    for j = 1, 10 do
        local subButton = CreateFrame("Button", "name"..j, f)
        if j==1 then
            subButton:SetPoint("TOP" ,f, "TOP", 0, -5)
        else
            subButton:SetPoint("TOP" ,f.buttons[j-1], "BOTTOM", 0, 0)

        end
        subButton:SetWidth(90)
        subButton:SetHeight(20)
        --subButton:SetNormalTexture("Interface\\ChatFrame\\ChatFrameColorSwatch")
        subButton:SetHighlightTexture("Interface\\QuestFrame\\UI-QuestTitleHighlight")
        -- 添加文字
        local text = subButton:CreateFontString(nil, "OVERLAY")
        text:SetAllPoints(subButton)
        text:SetFontObject("GameFontNormal")
        subButton.text = text

        subButton:RegisterForClicks("LeftButtonUp","RightButtonUp")
        subButton:Hide()
        f.buttons[j] = subButton
    end
    f:Hide()
    self.ddf = f
end
function RBMain:UpdateDropDFrame(class, frame)
    self:Scan()
    local cdtL = self.cdt[class]

    if tLength(cdtL) < 1 then
        frame.text:SetText(L["没有"]..RBDatabase[class]["Name"])
        return
    end
    local Hight = 10
    for i = 1, 10 do
        local target = cdtL[i]
        local group = frame.group
        if target then
            self.ddf.buttons[i].text:SetText(RaidBuff:GetClassHex(class,target))
            self.ddf.buttons[i]:SetScript("OnClick", function()
                if arg1 == "LeftButton" then
                    --print(format("LeftButton clique on group %s UpdateDropDFrame for %s", group, class))
                    self:UpdateResult(class, group, target, true)
                    self:Flush()
                elseif arg1 == "RightButton" then
                    print(format("RightButton clique on group %s UpdateDropDFrame for %s", group, class))
                end
                self.ddf:Hide()

            end)
            self.ddf.buttons[i]:Show()
            Hight = Hight + 20
        else
            self.ddf.buttons[i]:Hide()
        end
    end

    --重置位置
    self.ddf:SetHeight(Hight)
    self.ddf:ClearAllPoints()
    self.ddf:SetPoint("LEFT", frame, "RIGHT", 0, 0)
    self.ddf:Show()
end



--功能--
function RBMain:ResetALL()
    wipe(self.raidStat)
    for key, _ in pairs(self.cdt) do
        wipe(self.cdt[key])
    end
end
function RBMain:ResetClass(class)
    for i = 1, 8 do
        self:UpdateResult(class, i,nil, true)
    end
end



function RBMain:Scan()
    self:ResetALL()
    for i = 1, GetNumRaidMembers() do
        local name, _, subgroup, level, _, fileName = GetRaidRosterInfo(i)
        if name then
            self.raidStat[subgroup] = true
        end
        if tContainsKey(RBDatabase, fileName) then
            tinsert(self.cdt[fileName], name)
        end
    end
end
function RBMain:Flush()
    local groupL = {}
    for i, _ in pairs(self.raidStat) do
        tinsert(groupL, i)
    end
    local wight = 80

    for i = 1, 8 do
        local sg = groupL[i]
        if sg then
            self.mf.buttons["title"][i].text:SetText(L["队伍"]..sg)
            for class, _ in pairs(RBDatabase) do
                self.mf.buttons["buff"][class][i].group = sg
                local target = self.rlt[class][sg]
                if target then
                    self.mf.buttons["buff"][class][i].text:SetText(
                            RaidBuff:GetClassHex(class, target)
                    )
                else
                    self.mf.buttons["buff"][class][i].text:SetText(
                           "N/A"
                    )
                end
                self.mf.buttons["buff"][class][i]:Show()
            end
            wight = wight + 90
            self.mf.buttons["title"][i]:Show()
        else
            self.mf.buttons["title"][i]:Hide()
            for class, _ in pairs(RBDatabase) do
                self.mf.buttons["buff"][class][i]:Hide()
            end
        end
    end

    self.mf:SetWidth(wight)
    self.mf.textures["headLine"]:SetWidth(self.mf:GetWidth() - 10)
    self.mf.textures["titleLine"]:SetWidth(self.mf:GetWidth() - 12)
    for class, _ in pairs(RBDatabase) do
        local classL = class
        self.mf.buttons["buff"][classL][9].lineTextures:SetWidth(self.mf:GetWidth() - 10)
    end
    local point, relateFrame, relatePoint, xpos, ypos
    point, relateFrame, relatePoint, xpos, ypos = self.mf.textures["head"]:GetPoint()
    self.mf.textures["head"]:SetPoint(point, relateFrame, relatePoint, xpos, ypos)
end

function RBMain:UpdateResult(class, group ,name, sync)
    self.rlt[class][group] = name
    if sync then
        RaidBuff:SendCommMessage("RAID","UpdateManuel", class, group, name)
    end
end

function splitN(l, cdts)
    local nbOfcdt = tLength(cdts)
    if nbOfcdt > 0 then
        local result = {}
        local integerPart = math.modf(l / nbOfcdt)
        local restPart = math.mod(l, nbOfcdt )
        local index = 1
        for i = 1,nbOfcdt do
            if i <= restPart then
                for _ = 1, integerPart + 1 do
                    result[index] = cdts[i]
                    index = index + 1
                end
            else
                for _ = 1, integerPart do
                    result[index] = cdts[i]
                    index = index + 1
                end
            end
        end
        return result
    end
end

function RBMain:AutoSet()
    self:Scan()
    local nbOfGroup = tLength(self.raidStat)
    for class, _ in pairs(RBDatabase) do
        self:ResetClass(class)
        local splitGroup = splitN(nbOfGroup, self.cdt[class])
        if splitGroup then
            for k, _ in pairs(self.raidStat) do
                self:UpdateResult(class,k, table.remove(splitGroup, 1), true)
            end
        end
    end
    self:Flush()
end

function RBMain:Report(class)
    local buffName = RBDatabase[class]["BuffName"]
    local nameExist = {}
    local reportList = {}
    local position = 1
    for i = 1, 8 do
        if  self.rlt[class][i] then
            local name = self.rlt[class][i]
            if not nameExist[name] then
                nameExist[name] = position
                reportList[position] = {name, tostring(i)}
                position = position + 1
            else
                local index = nameExist[name]
                reportList[index][2] = reportList[index][2]..","..i
            end
        end
    end
    local buffNameR = format("%s %s", string.sub(buffName, 1, 3), string.sub(buffName, 3, 6))
    SendChatMessage(format("%s%s%s", strrep("*", 5),RaidBuff.Prefix, strrep("*", 5) ),"RAID")
    SendChatMessage(format("*%s* :", RaidBuff:GetClassHex(class,buffNameR)) ,"RAID")

    for _, val in pairs(reportList) do
        local nameC = RaidBuff:GetClassHex(class, val[1])
        local msg = format(">%s<: %s%s%s", nameC, L["第"], val[2] , L["队"])
        SendChatMessage(msg,"RAID")
    end
    SendChatMessage(strrep("*", 32),"RAID")
end